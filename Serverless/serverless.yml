# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: mig-service # NOTE: update this with your service name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  runtime: nodejs6.10
  role: arn:aws:iam::292274580527:role/cc116_lambda

# you can overwrite defaults here
#  stage: dev
#  region: us-east-1

# you can add statements to the Lambda function's IAM Role here
#  iamRoleStatements:
#    - Effect: "Allow"
#      Action:
#        - "s3:ListBucket"
#      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
#    - Effect: "Allow"
#      Action:
#        - "s3:PutObject"
#      Resource:
#        Fn::Join:
#          - ""
#          - - "arn:aws:s3:::"
#            - "Ref" : "ServerlessDeploymentBucket"
#            - "/*"

# you can define service wide environment variables here
#  environment:
#    variable1: value1

# you can add packaging information here
#package:
#  include:
#    - include-me.js
#    - include-me-dir/**
#  exclude:
#    - exclude-me.js
#    - exclude-me-dir/**

functions:
  hello:
    handler: handler.hello
  getWeather:
    handler: weather.get
  tm:
    handler: tm.get
  ComicManager:
    handler: ComicManager.get
    memorySize: 128
    timeout: 25
    events: 
      - http: GET comics
  ComicSingle:
    handler: ComicSingle.get
    memorySize: 128
    timeout: 20
  SeriesManager:
    handler: SeriesManager.get
    memorySize: 128
    timeout: 25
    events:
      - http: GET series
  SeriesSingle:
    handler: SeriesSingle.get
    memorySize: 128
    timeout: 20
  RequestAuthorizer:
    handler: RequestAuthorizer.handler
  GetObjectVersions:
    handler: GetObjectVersions.get
    memorySize: 128
    timeout: 10

#    The following are a few example events you can configure
#    NOTE: Please make sure to change your handler code to work with those events
#    Check the event documentation for details
#    events:
#      - http:
#          path: users/create
#          method: get
#      - s3: ${env:BUCKET}
#      - schedule: rate(10 minutes)
#      - sns: greeter-topic
#      - stream: arn:aws:dynamodb:region:XXXXXX:table/foo/stream/1970-01-01T00:00:00.000
#      - alexaSkill
#      - iot:
#          sql: "SELECT * FROM 'some_topic'"
#      - cloudwatchEvent:
#          event:
#            source:
#              - "aws.ec2"
#            detail-type:
#              - "EC2 Instance State-change Notification"
#            detail:
#              state:
#                - pending
#      - cloudwatchLog: '/aws/lambda/hello'
#      - cognitoUserPool:
#          pool: MyUserPool
#          trigger: PreSignUp

#    Define function environment variables here
#    environment:
#      variable2: value2

# you can add CloudFormation resource templates here
# resources:
#   Resources:
#     NewResource:
#       Type: AWS::S3::Bucket
#       Properties:
#         BucketName: mig-practica
#         VersioningConfiguration:
#           Status: Enabled
resources:
  Resources: 
    NewResource:
      Type: "AWS::DynamoDB::Table"
      Properties:
        AttributeDefinitions:
          - AttributeName: Id
            AttributeType: S
          # - AttributeName: StartTime
          #   AttributeType: S
          # - AttributeName: EndTime
          #   AttributeType: S
          # - AttributeName: SingleQuantity
          #   AttributeType: N
          # - AttributeName: Character1
          #   AttributeType: S
          # - AttributeName: Character2
          #   AttributeType: S
          # - AttributeName: MemoryReservedMB
          #   AttributeType: N
          # - AttributeName: MemoryUsedMB
          #   AttributeType: N
        KeySchema:
          - AttributeName: Id
            KeyType: HASH
        TableName: mmartMarvelTable
        ProvisionedThroughput:
            ReadCapacityUnits: 5
            WriteCapacityUnits: 2


#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
